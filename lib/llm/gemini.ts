import { GoogleGenAI } from '@google/genai';
import { 
  SYSTEM_PROMPT, 
  getUserPrompt, 
  extractTitle, 
  extractKeyConcepts, 
  extractPrerequisites,
  countSectionsFromContent,
  type LessonGenerationOptions 
} from './prompts';

// Initialize Gemini client lazily to avoid errors when API key is not set
function getGeminiClient() {
  if (!process.env.GOOGLE_API_KEY) {
    throw new Error('GOOGLE_API_KEY environment variable is not set');
  }
  return new GoogleGenAI({ apiKey: process.env.GOOGLE_API_KEY });
}

export interface GeneratedLesson {
  title: string;
  content: string;
  estimatedSections: number;
  gradeLevel: string;
  keyConcepts: string[];
  prerequisites: string[];
}

export async function generateLessonWithGemini(options: LessonGenerationOptions): Promise<GeneratedLesson> {
  const {
    gradeLevel = '2',
    sections = 4
  } = options;

  const systemPrompt = SYSTEM_PROMPT;
  const userPrompt = getUserPrompt(options);

  try {
    const ai = getGeminiClient();
    
    const response = await ai.models.generateContent({
      model: "gemini-2.0-flash-exp",
      contents: `${systemPrompt}\n\n${userPrompt}`,
    });
    
    // Extract content from Gemini response
    let content: string = '';
    
    if (response.candidates && response.candidates.length > 0) {
      const candidate = response.candidates[0];
      if (candidate.content && candidate.content.parts && candidate.content.parts.length > 0) {
        const part = candidate.content.parts[0];
        if (part.text) {
          content = part.text;
        }
      }
    }

    if (!content) {
      console.error('Unexpected response structure:', JSON.stringify(response, null, 2));
      throw new Error('No content generated by Gemini');
    }

    // Extract structured information from the generated content
    const title = extractTitle(content);
    const keyConcepts = extractKeyConcepts(content);
    const prerequisites = extractPrerequisites(content);
    const estimatedSections = countSectionsFromContent(content);

    return {
      title,
      content,
      estimatedSections,
      gradeLevel,
      keyConcepts,
      prerequisites
    };
  } catch (error) {
    console.error('Gemini API error:', error);
    throw new Error(`Failed to generate lesson with Gemini: ${error instanceof Error ? error.message : 'Unknown error'}`);
  }
}
