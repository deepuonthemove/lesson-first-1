import { HfInference } from '@huggingface/inference';
import { 
  SYSTEM_PROMPT, 
  getUserPrompt, 
  extractTitle, 
  extractKeyConcepts, 
  extractPrerequisites,
  countSectionsFromContent,
  type LessonGenerationOptions 
} from './prompts';

// Initialize Hugging Face client for Qwen models
function getQwenClient() {
  if (!process.env.HUGGINGFACE_API_KEY) {
    throw new Error('HUGGINGFACE_API_KEY environment variable is not set');
  }
  return new HfInference(process.env.HUGGINGFACE_API_KEY);
}

export interface GeneratedLesson {
  title: string;
  content: string;
  estimatedSections: number;
  gradeLevel: string;
  keyConcepts: string[];
  prerequisites: string[];
}

export async function generateLessonWithQwen(options: LessonGenerationOptions): Promise<GeneratedLesson> {
  const {
    gradeLevel = '2',
    sections = 4
  } = options;

  const systemPrompt = SYSTEM_PROMPT;
  const userPrompt = getUserPrompt(options);

  try {
    const hf = getQwenClient();
    // Use chat completion for Qwen models
    const result = await hf.chatCompletion({
      model: "Qwen/Qwen2.5-7B-Instruct", // Use Instruct model for chat
      messages: [
        { role: "system", content: systemPrompt },
        { role: "user", content: userPrompt }
      ],
      parameters: {
        max_new_tokens: 2000,
        temperature: 0.7,
        do_sample: true
      }
    });

    const content = result.choices[0]?.message?.content;
    if (!content) {
      throw new Error('No content generated by Qwen');
    }

    // Extract structured information from the generated content
    const title = extractTitle(content);
    const keyConcepts = extractKeyConcepts(content);
    const prerequisites = extractPrerequisites(content);
    const estimatedSections = countSectionsFromContent(content);

    return {
      title,
      content,
      estimatedSections,
      gradeLevel,
      keyConcepts,
      prerequisites
    };
  } catch (error) {
    console.error('Qwen API error:', error);
    throw new Error(`Failed to generate lesson with Qwen: ${error instanceof Error ? error.message : 'Unknown error'}`);
  }
}
